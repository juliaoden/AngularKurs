{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../server/server.component\";\nexport class ServersComponent {\n  constructor() {\n    this.allowNewServer = false;\n    this.serverCreationStatus = 'No server was created';\n    this.serverName = '';\n    setTimeout(() => {\n      this.allowNewServer = true;\n    }, 3000);\n  }\n  ngOnInit() {}\n  onCreateServer() {\n    this.serverCreationStatus = 'Server was created';\n  }\n  onUpdateServerName(event) {\n    this.serverName = event.target.value;\n  }\n}\nServersComponent.ɵfac = function ServersComponent_Factory(t) {\n  return new (t || ServersComponent)();\n};\nServersComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ServersComponent,\n  selectors: [[\"app-servers\"]],\n  decls: 11,\n  vars: 3,\n  consts: [[\"type\", \"text\", 1, \"form-control\"], [\"type\", \"button\", 1, \"btn\", \"btn-success\", 3, \"disabled\", \"click\"]],\n  template: function ServersComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"label\");\n      i0.ɵɵtext(1, \"Server Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(2, \"input\", 0);\n      i0.ɵɵelementStart(3, \"p\");\n      i0.ɵɵtext(4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"button\", 1);\n      i0.ɵɵlistener(\"click\", function ServersComponent_Template_button_click_5_listener() {\n        return ctx.onCreateServer();\n      });\n      i0.ɵɵtext(6, \"Add Server\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"p\");\n      i0.ɵɵtext(8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"app-server\")(10, \"app-server\");\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate(ctx.serverName);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"disabled\", !ctx.allowNewServer);\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate(ctx.serverCreationStatus);\n    }\n  },\n  dependencies: [i1.ServerComponent],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;AAUA,OAAM,MAAOA,gBAAgB;EAK3BC;IAJA,mBAAc,GAAG,KAAK;IACtB,yBAAoB,GAAG,uBAAuB;IAC9C,eAAU,GAAG,EAAE;IAGbC,UAAU,CAAC,MAAK;MACd,IAAI,CAACC,cAAc,GAAG,IAAI;IAC5B,CAAC,EAAE,IAAI,CAAC;EACV;EACAC,QAAQ,IAAI;EAEZC,cAAc;IACZ,IAAI,CAACC,oBAAoB,GAAG,oBAAoB;EAClD;EAEAC,kBAAkB,CAACC,KAAY;IAC7B,IAAI,CAACC,UAAU,GAAsBD,KAAK,CAACE,MAAO,CAACC,KAAK;EAC1D;;AAlBWX,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;QAAhBA,gBAAgB;EAAAY;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCV7BC,6BAAO;MAAAA,2BAAW;MAAAA,iBAAQ;MAE1BA,2BAAwC;MACxCA,yBAAG;MAAAA,YAAgB;MAAAA,iBAAI;MACvBA,iCAAsG;MAA3BA;QAAA,OAASC,oBAAgB;MAAA,EAAC;MAACD,0BAC5F;MAAAA,iBAAS;MAEnBA,yBAAG;MAAAA,YAA0B;MAAAA,iBAAI;MAEjCA,6BAAyB;;;MANtBA,eAAgB;MAAhBA,oCAAgB;MAC2BA,eAA4B;MAA5BA,8CAA4B;MAGvEA,eAA0B;MAA1BA,8CAA0B","names":["ServersComponent","constructor","setTimeout","allowNewServer","ngOnInit","onCreateServer","serverCreationStatus","onUpdateServerName","event","serverName","target","value","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\j.oden\\Desktop\\Kurse\\Angular\\my-first-app\\src\\app\\servers\\servers.component.ts","C:\\Users\\j.oden\\Desktop\\Kurse\\Angular\\my-first-app\\src\\app\\servers\\servers.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-servers',\n  // selector: \"[app-servers]\"\n  // selector: '.app-servers',\n  // template: '<app-server></app-server><app-server></app-server>',\n  templateUrl: './servers.component.html',\n  styleUrls: ['./servers.component.css'],\n})\nexport class ServersComponent implements OnInit {\n  allowNewServer = false;\n  serverCreationStatus = 'No server was created';\n  serverName = '';\n\n  constructor() {\n    setTimeout(() => {\n      this.allowNewServer = true;\n    }, 3000);\n  }\n  ngOnInit() {}\n\n  onCreateServer() {\n    this.serverCreationStatus = 'Server was created';\n  }\n\n  onUpdateServerName(event: Event) {\n    this.serverName = (<HTMLInputElement>event.target).value;\n  }\n}\n","<label>Server Name</label>\n<!-- <input type=\"text\" class=\"form-control\" (input)=\"onUpdateServerName($event)\"> -->\n<input type=\"text\" class=\"form-control\">\n<p>{{ serverName }}</p>\n<button type=\"button\" class=\"btn btn-success\" [disabled]=\"!allowNewServer\" (click)=\"onCreateServer()\">Add\n    Server</button>\n<!-- <p [innerText]=\"allowNewServer\"></p> -->\n<p>{{ serverCreationStatus }}</p>\n\n<app-server></app-server>\n<app-server></app-server>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}