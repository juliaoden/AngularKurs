{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"../server/server.component\";\nfunction ServersComponent_p_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"Server was created!, server name is \", ctx_r0.serverName, \"\");\n  }\n}\nexport class ServersComponent {\n  constructor() {\n    this.allowNewServer = false;\n    this.serverCreationStatus = 'No server was created';\n    this.serverName = 'TestServer';\n    this.serverCreated = false;\n    setTimeout(() => {\n      this.allowNewServer = true;\n    }, 3000);\n  }\n  ngOnInit() {}\n  onCreateServer() {\n    this.serverCreationStatus = 'Server was created! Name is ' + this.serverName;\n    this.serverCreated = true;\n  }\n  onUpdateServerName(event) {\n    this.serverName = event.target.value;\n  }\n}\nServersComponent.ɵfac = function ServersComponent_Factory(t) {\n  return new (t || ServersComponent)();\n};\nServersComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ServersComponent,\n  selectors: [[\"app-servers\"]],\n  decls: 8,\n  vars: 2,\n  consts: [[\"type\", \"text\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"button\", 1, \"btn\", \"btn-success\", 3, \"disabled\", \"click\"], [4, \"ngIf\"]],\n  template: function ServersComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"label\");\n      i0.ɵɵtext(1, \"Server Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"input\", 0);\n      i0.ɵɵlistener(\"ngModelChange\", function ServersComponent_Template_input_ngModelChange_2_listener($event) {\n        return ctx.serverName = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"button\", 1);\n      i0.ɵɵlistener(\"click\", function ServersComponent_Template_button_click_3_listener() {\n        return ctx.onCreateServer();\n      });\n      i0.ɵɵtext(4, \"Add Server\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(5, ServersComponent_p_5_Template, 2, 1, \"p\", 2);\n      i0.ɵɵelement(6, \"app-server\")(7, \"app-server\");\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.serverName);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"disabled\", !ctx.allowNewServer);\n    }\n  },\n  dependencies: [i1.NgIf, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgModel, i3.ServerComponent],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;IAQAA,yBAAY;IAAAA,YAAoD;IAAAA,iBAAI;;;;IAAxDA,eAAoD;IAApDA,oFAAoD;;;ACEhE,OAAM,MAAOC,gBAAgB;EAM3BC;IALA,mBAAc,GAAG,KAAK;IACtB,yBAAoB,GAAG,uBAAuB;IAC9C,eAAU,GAAG,YAAY;IACzB,kBAAa,GAAG,KAAK;IAGnBC,UAAU,CAAC,MAAK;MACd,IAAI,CAACC,cAAc,GAAG,IAAI;IAC5B,CAAC,EAAE,IAAI,CAAC;EACV;EACAC,QAAQ,IAAI;EAEZC,cAAc;IACZ,IAAI,CAACC,oBAAoB,GACvB,8BAA8B,GAAG,IAAI,CAACC,UAAU;IAClD,IAAI,CAACC,aAAa,GAAG,IAAI;EAC3B;EAEAC,kBAAkB,CAACC,KAAY;IAC7B,IAAI,CAACH,UAAU,GAAsBG,KAAK,CAACC,MAAO,CAACC,KAAK;EAC1D;;AArBWZ,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;QAAhBA,gBAAgB;EAAAa;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDV7BlB,6BAAO;MAAAA,2BAAW;MAAAA,iBAAQ;MAE1BA,gCAAiE;MAAzBA;QAAA;MAAA,EAAwB;MAAhEA,iBAAiE;MAEjEA,iCAAsG;MAA3BA;QAAA,OAASmB,oBAAgB;MAAA,EAAC;MAACnB,0BAC5F;MAAAA,iBAAS;MAGnBA,6DAAoE;MAEpEA,6BAAyB;;;MAReA,eAAwB;MAAxBA,wCAAwB;MAElBA,eAA4B;MAA5BA,8CAA4B","names":["i0","ServersComponent","constructor","setTimeout","allowNewServer","ngOnInit","onCreateServer","serverCreationStatus","serverName","serverCreated","onUpdateServerName","event","target","value","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\j.oden\\Desktop\\Kurse\\Angular\\my-first-app\\src\\app\\servers\\servers.component.html","C:\\Users\\j.oden\\Desktop\\Kurse\\Angular\\my-first-app\\src\\app\\servers\\servers.component.ts"],"sourcesContent":["<label>Server Name</label>\n<!-- <input type=\"text\" class=\"form-control\" (input)=\"onUpdateServerName($event)\"> -->\n<input type=\"text\" class=\"form-control\" [(ngModel)]=\"serverName\">\n<!-- <p>{{ serverName }}</p> -->\n<button type=\"button\" class=\"btn btn-success\" [disabled]=\"!allowNewServer\" (click)=\"onCreateServer()\">Add\n    Server</button>\n<!-- <p [innerText]=\"allowNewServer\"></p> -->\n<!-- <p>{{ serverCreationStatus }}</p> -->\n<p *ngIf=\"\">Server was created!, server name is {{ serverName }}</p>\n\n<app-server></app-server>\n<app-server></app-server>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-servers',\n  // selector: \"[app-servers]\"\n  // selector: '.app-servers',\n  // template: '<app-server></app-server><app-server></app-server>',\n  templateUrl: './servers.component.html',\n  styleUrls: ['./servers.component.css'],\n})\nexport class ServersComponent implements OnInit {\n  allowNewServer = false;\n  serverCreationStatus = 'No server was created';\n  serverName = 'TestServer';\n  serverCreated = false;\n\n  constructor() {\n    setTimeout(() => {\n      this.allowNewServer = true;\n    }, 3000);\n  }\n  ngOnInit() {}\n\n  onCreateServer() {\n    this.serverCreationStatus =\n      'Server was created! Name is ' + this.serverName;\n    this.serverCreated = true;\n  }\n\n  onUpdateServerName(event: Event) {\n    this.serverName = (<HTMLInputElement>event.target).value;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}